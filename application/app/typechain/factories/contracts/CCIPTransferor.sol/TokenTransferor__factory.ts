/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenTransferor,
  TokenTransferorInterface,
} from "../../../contracts/CCIPTransferor.sol/TokenTransferor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spContractAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_schemaId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_indexingKey",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
    ],
    name: "DestinationChainNotAllowlisted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiverAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "TokensTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "allowlistDestinationChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "allowlistedChains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indexingKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "schemaId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spContract",
    outputs: [
      {
        internalType: "contract ISP",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "attestationId",
        type: "uint64",
      },
    ],
    name: "transferTokensPayLINK",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040908082523462000461575062002186803803806200002181620004ae565b92833981019060c08183031262000412576200003d81620004d4565b916020906200004e828401620004d4565b906200005c868501620004d4565b9460608501519260018060401b039586851685036200040d576200008360808201620004d4565b9060a081015190888211620003be570197601f9585878b01121562000366578951898111620002a357601f199a620000c1828a018d168b01620004ae565b978289528a83830101116200031257899060005b838110620002fd575050600091880101523315620002b95760018060a01b0319943386600054161760005560018060a01b039485809216876004541617600455168560055416176005558360075491600160a01b600160e01b039060a01b1692169063ffffffff60e01b161717600755169060065416176006558051938411620002a357600854926001938481811c9116801562000298575b82821014620002825783811162000236575b5080928511600114620001cb575083945090839291600094620001bf575b50501b916000199060031b1c1916176008555b51611c9c9081620004ea8239f35b0151925038806200019e565b929484908116600860005284600020946000905b888383106200021b575050501062000201575b505050811b01600855620001b1565b015160001960f88460031b161c19169055388080620001f2565b858701518855909601959485019487935090810190620001df565b6008600052816000208480880160051c82019284891062000278575b0160051c019085905b8281106200026b57505062000180565b600081550185906200025b565b9250819262000252565b634e487b7160e01b600052602260045260246000fd5b90607f16906200016e565b634e487b7160e01b600052604160045260246000fd5b8a5162461bcd60e51b815260048101899052601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b8181018301518a82018401528b9201620000d5565b8c5162461bcd60e51b8152600481018b9052602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b8a5162461bcd60e51b815260048101899052602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b8a5162461bcd60e51b815260048101899052602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b600080fd5b825162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b6040519190601f01601f191682016001600160401b03811183821017620002a357604052565b51906001600160a01b03821682036200040d5756fe6080604052600436101561006d575b361561006b5760405162461bcd60e51b815260206004820152602960248201527f556e6b6e6f776e207369676e617475726520616e64206e6f2066616c6c6261636044820152681ac81919599a5b995960ba1b6064820152608490fd5b005b60003560e01c8063075b1a09146116495780630bb106eb1461160a5780633aeac4e11461146157806351cff8d9146113d8578063633423be146113af578063667578cf146112c857806379ba50971461121a5780637cd4198e146102a05780637ce343b5146102775780638da5cb5b1461024e57806396d3b83d146101f1578063f2fde38b146101345763fc0c546a0361000e573461012f57600036600319011261012a576006546040516001600160a01b039091168152602090f35b6116c3565b611673565b3461012f57602036600319011261012a5761014d611779565b610155611b7b565b6001600160a01b03908116903382146101ac57816bffffffffffffffffffffffff60a01b6001541617600155600054167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b3461012f57604036600319011261012a5761020a611763565b60243590811515809203610249576001600160401b0390610229611b7b565b16600052600260205260406000209060ff80198354169116179055600080f35b600080fd5b3461012f57600036600319011261012a576000546040516001600160a01b039091168152602090f35b3461012f57600036600319011261012a576007546040516001600160a01b039091168152602090f35b3461012f57606036600319011261012a576102b9611763565b6044356001600160401b0381168103610249576102d4611b7b565b6001600160401b038216600052600260205260ff60406000205416156111f9576007546001600160a01b031690813b15610b61576001600160401b036024600092604051948593849262c44a5160e71b84521660048301525afa8015610b0957600090610f64575b610120915001518051810160808282031261012a5760208201519060408301516001600160401b038111610f5f5761037c90602080840191860101611a08565b906060840151906001600160401b038211610f5f576080916020806103a5930191870101611a08565b9301516001600160a01b038116810361024957600380546001600160a01b0319166001600160a01b0392831617905560065416803b15610b61576040516370a0823160e01b815230600482015290602082602481845afa918215610b0957600092610f2b575b50803b15610b61576040516323b872dd60e01b81523360048201523060248201526044810185905290602090829060649082906000905af18015610b0957610ef2575b506006546001600160a01b031692833b15610b61576040516370a0823160e01b815230600482015291602083602481885afa928315610b0957600093610ebe575b508203918211610c555711610e635760018060a01b03600354169260018060a01b036005541692606060806040516104c6816117e5565b8281528260208201528260408201526000838201520152604051906104ea82611800565b6001825260005b60208110610e3e57506040519061050782611800565b8152602435602082015261051a82611b6e565b5261052481611b6e565b506040519460208601526020855261053b85611800565b604051908160208101106001600160401b03602084011117610e28576020820160405260008252604051916397a657c960e01b6020840152516024830152602482526105868261181b565b60405195610593876117e5565b86526040518060208101106001600160401b03602083011117610e2857602081016040526000815260208701526040860152836060860152608085015260018060a01b0360045416803b15610b61576040516320487ded60e01b81529360208580610602898b60048401611aa2565b0381855afa948515610b0957600095610df4575b50803b15610b61576040516370a0823160e01b8152306004820152602081602481855afa908115610b0957600091610dc2575b508511610d3a57803b15610b615760405163095ea7b360e01b81526001600160a01b0392909216600483015260248201859052602090829060449082906000905af18015610b0957610d01575b506006546004546001600160a01b039081169116803b15610b615760405163095ea7b360e01b81526001600160a01b039290921660048301526024803590830152602090829060449082906000905af18015610b0957610cc8575b506004546001600160a01b0316803b15610b615761072b6020916000966040519788809481936396f4e9f960e01b83528c60048401611aa2565b03925af1938415610b0957600094610c92575b50610761916107736107819260405194859360406020860152606085019061187a565b838103601f190160408501529061187a565b03601f198101835282611836565b6040519061078e82611800565b6001825260005b60208110610c815750604051336020820152602081526107b481611800565b6107bd83611b6e565b526107c782611b6e565b5060075490604051926107d9846117c9565b6001600160401b038360a01c168452600060208501526000604085015260006060850152306080850152600060a0850152600060c0850152600060e085015261010084015261012083015233604051906108328261181b565b602a82526040366020840137815115610c6b5760306020830153815160011015610c6b576078602183015360295b60018111610c0c5750610bed57604051906108848151809260208086019101611857565b816000600854926108948461178f565b9360018116908115610bca5750600114610b66575b506108bd925003601f198101835282611836565b6001600160a01b0382163b15610b61576040519263b82916cb60e01b8452608060048501526001600160401b0381511660848501526001600160401b0360208201511660a48501526001600160401b0360408201511660c48501526001600160401b0360608201511660e485015260018060a01b036080820151166101048501526001600160401b0360a08201511661012485015260c08101516004811015610b4b5791849261014484959395015260e08401511515610164840152610100840151936101406101848501528451806101c48601526101e4906020828701928260051b8801019701916000905b828210610b15575050505060406109ee85936109dc6020986101206000960151608319888303016101a489015261187a565b8581036003190160248701529061187a565b83810360031981016044860152838252601c8101606486015290870183905201926001600160a01b03165af18015610b0957610a9c575b50817fc15fb748c32ba4eb29c1c311e78533f93b4425eab49ea87c6fe4279ecadca04360a06001600160401b03602096600180841b036003541695600180851b0360065416600180861b0360055416906040519889528a8901526024356040890152606088015260808701521693a3604051908152f35b926020843d602011610b01575b81610ab660209383611836565b8101031261012a577fc15fb748c32ba4eb29c1c311e78533f93b4425eab49ea87c6fe4279ecadca04360a06001600160401b038593610af660209861198e565b509650505050610a25565b3d9150610aa9565b6040513d6000823e3d90fd5b9193949650919496602080610b376001936101e3198d8203018652895161187a565b9701920192018896949391929795976109aa565b634e487b7160e01b600052602160045260246000fd5b61189f565b905060086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee36000905b848210610bac5750506108bd9260209183010101896108a9565b60209192935080600191548385878a01010152019101849291610b92565b602093506108bd95915060ff1916838386010152801515029083010101896108a9565b60405163e22e27eb60e01b815233600482015260146024820152604490fd5b906010600f82161015610c6b578251821015610c6b576f181899199a1a9b1b9c1cb0b131b232b360811b600f82161a8383016020015360041c908015610c555760001901610860565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b806060602080938601015201610795565b9093506020813d602011610cc0575b81610cae60209383611836565b8101031261012a57519261076161073e565b3d9150610ca1565b6020813d602011610cf9575b81610ce160209383611836565b8101031261012a57610cf2906119a2565b50856106f1565b3d9150610cd4565b6020813d602011610d32575b81610d1a60209383611836565b8101031261012a57610d2b906119a2565b5085610696565b3d9150610d0d565b84813b15610b61576020602492604051938480926370a0823160e01b82523060048301525afa908115610b0957600091610d8d575b6044925060405191634787a10360e11b835260048301526024820152fd5b90506020823d602011610dba575b81610da860209383611836565b8101031261012a576044915190610d6f565b3d9150610d9b565b90506020813d602011610dec575b81610ddd60209383611836565b8101031261012a575188610649565b3d9150610dd0565b9094506020813d602011610e20575b81610e1060209383611836565b8101031261012a57519387610616565b3d9150610e03565b634e487b7160e01b600052604160045260246000fd5b602090604051610e4d81611800565b60008152600083820152828286010152016104f1565b60405162461bcd60e51b815260206004820152602d60248201527f416d6f756e74206d7573742062652067726561746572207468616e206f72206560448201526c7175616c20746f20707269636560981b6064820152608490fd5b9092506020813d602011610eea575b81610eda60209383611836565b8101031261012a5751918761048f565b3d9150610ecd565b6020813d602011610f23575b81610f0b60209383611836565b8101031261012a57610f1c906119a2565b508561044e565b3d9150610efe565b9091506020813d602011610f57575b81610f4760209383611836565b8101031261012a5751908661040b565b3d9150610f3a565b611713565b503d90816000823e610f768282611836565b602081838101031261012a578051916001600160401b038311610f5f5761014083830182840103126111a85760405191610faf836117c9565b610fba84820161198e565b8352610fca60208583010161198e565b6020840152610fdd60408583010161198e565b6040840152610ff060608583010161198e565b6060840152808401608001516001600160a01b038116810361024957608084015261101f60a08583010161198e565b60a084015260c0848201015160048110156102495760c084015261104760e0858301016119a2565b60e084015261010084820101516001600160401b03811161110b57828201601f828785010101121561114a57808583010151906001600160401b038211610e28578160051b906040519261109e6020840185611836565b835260208301858501602084848b89010101011161114f576020828987010101905b602084848b89010101018210611110575050505061010084015261012084820101516001600160401b03811161110b5761012094611102938301920101611a08565b8282015261033c565b61193d565b8151906001600160401b03821161114a57602080929161113d898380958f8a908f85019401010101611a08565b81520192019190506110c0565b6119af565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b604051630a503cdb60e01b81526001600160401b0383166004820152602490fd5b3461012f57600036600319011261012a576001546001600160a01b03808216330361128a57600054916bffffffffffffffffffffffff60a01b903382851617600055166001553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b3461012f57600036600319011261012a576040516008546000826112eb8361178f565b918282526020936001908560018216918260001461138f575050600114611332575b5061131a92500383611836565b61132e60405192828493845283019061187a565b0390f35b84915060086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3906000915b85831061137757505061131a93508201018561130d565b80548389018501528794508693909201918101611360565b60ff19168582015261131a95151560051b850101925087915061130d9050565b3461012f57600036600319011261012a576003546040516001600160a01b039091168152602090f35b3461012f57602036600319011261012a576113f1611779565b6113f9611b7b565b4790811561144f57600080808085855af161141261190d565b501561141a57005b604051639d11f56360e01b81523360048201526001600160a01b039190911660248201526044810191909152606490fd5b0390fd5b604051630686827b60e51b8152600490fd5b3461012f57604036600319011261012a5761147a611779565b6024356001600160a01b038116919082900361024957611498611b7b565b813b15610b61576040516370a0823160e01b81523060048201526020928382602481845afa918215610b09576000926115db575b50811561144f5760405163a9059cbb60e01b8582019081526001600160a01b0394909416602482015260448082019390935291825261155e926000908190611515606486611836565b6040519461152286611800565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488870152519082855af161155861190d565b91611bcd565b80518061156757005b8183918101031261012a578161157d91016119a2565b1561158457005b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b9091508381813d8311611603575b6115f38183611836565b8101031261012a575190846114cc565b503d6115e9565b3461012f57602036600319011261012a576001600160401b0361162b611763565b166000526002602052602060ff604060002054166040519015158152f35b3461167357600036600319011261012a5760206001600160401b0360075460a01c16604051908152f35b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b600435906001600160401b038216820361024957565b600435906001600160a01b038216820361024957565b90600182811c921680156117bf575b60208310146117a957565b634e487b7160e01b600052602260045260246000fd5b91607f169161179e565b61014081019081106001600160401b03821117610e2857604052565b60a081019081106001600160401b03821117610e2857604052565b604081019081106001600160401b03821117610e2857604052565b606081019081106001600160401b03821117610e2857604052565b90601f801991011681019081106001600160401b03821117610e2857604052565b60005b83811061186a5750506000910152565b818101518382015260200161185a565b9060209161189381518092818552858086019101611857565b601f01601f1916010190565b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b6001600160401b038111610e2857601f01601f191660200190565b3d15611938573d9061191e826118f2565b9161192c6040519384611836565b82523d6000602084013e565b606090565b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20696e76616c696420737472756374206f66666044820152621cd95d60ea1b6064820152608490fd5b51906001600160401b038216820361024957565b5190811515820361024957565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b81601f8201121561114a578051611a1e816118f2565b92611a2c6040519485611836565b81845260208284010111611a4d57611a4a9160208085019101611857565b90565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b909291926001600160401b03604091168252602091604083820152611ad3855160a0604084015260e083019061187a565b91611aef8487015193603f19948585830301606086015261187a565b604087015194848483030160808501528080875193848152019601926000905b838210611b4557505050505060c06080611a4a959660018060a01b0360608201511660a08501520151928285030191015261187a565b845180516001600160a01b03168952830151888401529687019693820193600190910190611b0f565b805115610c6b5760200190565b6000546001600160a01b03163303611b8f57565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b91929015611c2f5750815115611be1575090565b3b15611bea5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611c425750805190602001fd5b60405162461bcd60e51b81526020600482015290819061144b90602483019061187a56fea2646970667358221220ed3fc875378c2cff85acab81a74c7a14a6fedf72496c05c5091c2862d6573d9164736f6c63430008180033";

type TokenTransferorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTransferorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTransferor__factory extends ContractFactory {
  constructor(...args: TokenTransferorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _router: AddressLike,
    _link: AddressLike,
    _spContractAddress: AddressLike,
    _schemaId: BigNumberish,
    _token: AddressLike,
    _indexingKey: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _router,
      _link,
      _spContractAddress,
      _schemaId,
      _token,
      _indexingKey,
      overrides || {}
    );
  }
  override deploy(
    _router: AddressLike,
    _link: AddressLike,
    _spContractAddress: AddressLike,
    _schemaId: BigNumberish,
    _token: AddressLike,
    _indexingKey: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _router,
      _link,
      _spContractAddress,
      _schemaId,
      _token,
      _indexingKey,
      overrides || {}
    ) as Promise<
      TokenTransferor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenTransferor__factory {
    return super.connect(runner) as TokenTransferor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTransferorInterface {
    return new Interface(_abi) as TokenTransferorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenTransferor {
    return new Contract(address, _abi, runner) as unknown as TokenTransferor;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenTransferor,
  TokenTransferorInterface,
} from "../../../contracts/CCIPTransferor.sol/TokenTransferor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spContractAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_schemaId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
    ],
    name: "DestinationChainNotAllowlisted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiverAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "TokensTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "allowlistDestinationChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "allowlistedChains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "schemaId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spContract",
    outputs: [
      {
        internalType: "contract ISP",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "attestationId",
        type: "uint64",
      },
    ],
    name: "transferTokensPayLINK",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060409080825234620001b8575080516001600160401b0390601f62001ceb38819003918201601f191683019184831184841017620001a25780849260a09488528339810103126200015357620000578162000205565b91620000666020830162000205565b916200007485820162000205565b90606081015192831683036200014e57608062000092910162000205565b9133156200010a5760018060a01b0319943386600054161760005560018060a01b039485809216876004541617600455168560055416176005558360075491600160a01b600160e01b039060a01b1692169063ffffffff60e01b1617176007551690600654161760065551611ad090816200021b8239f35b855162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b600080fd5b825162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b51906001600160a01b03821682036200014e5756fe6080604052600436101561006d575b361561006b5760405162461bcd60e51b815260206004820152602960248201527f556e6b6e6f776e207369676e617475726520616e64206e6f2066616c6c6261636044820152681ac81919599a5b995960ba1b6064820152608490fd5b005b60003560e01c8063075b1a09146114b75780630bb106eb146114785780633aeac4e1146112cf57806351cff8d914611246578063633423be1461121d57806379ba50971461116f5780637cd4198e146102955780637ce343b51461026c5780638da5cb5b1461024357806396d3b83d146101e6578063f2fde38b146101295763fc0c546a0361000e573461012457600036600319011261011f576006546040516001600160a01b039091168152602090f35b611531565b6114e1565b3461012457602036600319011261011f576101426115e7565b61014a6119af565b6001600160a01b03908116903382146101a157816bffffffffffffffffffffffff60a01b6001541617600155600054167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b3461012457604036600319011261011f576101ff6115d1565b6024359081151580920361023e576001600160401b039061021e6119af565b16600052600260205260406000209060ff80198354169116179055600080f35b600080fd5b3461012457600036600319011261011f576000546040516001600160a01b039091168152602090f35b3461012457600036600319011261011f576007546040516001600160a01b039091168152602090f35b3461012457606036600319011261011f576102ae6115d1565b6044356001600160401b038116810361023e576102c96119af565b6001600160401b038216600052600260205260ff604060002054161561114e576007546001600160a01b031690813b15610b3f576001600160401b036024600092604051948593849262c44a5160e71b84521660048301525afa8015610ae757600090610eb9575b6101209150015180518101906080816020840193031261011f5760208101519060408101516001600160401b038111610eb45783602061037392840101611817565b9260608201516001600160401b038111610eb457608091602061039892850101611817565b9101516001600160a01b038116810361023e57600380546001600160a01b0319166001600160a01b0392831617905560065416803b15610b3f576040516370a0823160e01b815230600482015290602082602481845afa918215610ae757600092610e80575b50803b15610b3f576040516323b872dd60e01b81523360048201523060248201526044810185905290602090829060649082906000905af18015610ae757610e47575b506006546001600160a01b031692833b15610b3f576040516370a0823160e01b815230600482015291602083602481885afa928315610ae757600093610e13575b508203918211610bac5711610db85760018060a01b03600354169260018060a01b036005541692606060806040516104b98161166c565b8281528260208201528260408201526000838201520152604051906104dd82611687565b6001825260005b60208110610d935750604051906104fa82611687565b8152602435602082015261050d826119a2565b52610517816119a2565b506040519460208601526020855261052e85611687565b604051908160208101106001600160401b03602084011117610d7d576020820160405260008252604051916397a657c960e01b602084015251602483015260248252610579826116a2565b604051956105868761166c565b86526040518060208101106001600160401b03602083011117610d7d57602081016040526000815260208701526040860152836060860152608085015260018060a01b0360045416803b15610b3f576040516320487ded60e01b815293602085806105f5898b600484016118d6565b0381855afa948515610ae757600095610d49575b50803b15610b3f576040516370a0823160e01b8152306004820152602081602481855afa908115610ae757600091610d17575b508511610c8f57803b15610b3f5760405163095ea7b360e01b81526001600160a01b0392909216600483015260248201859052602090829060449082906000905af18015610ae757610c56575b506006546004546001600160a01b039081169116803b15610b3f5760405163095ea7b360e01b81526001600160a01b039290921660048301526024803590830152602090829060449082906000905af18015610ae757610c1d575b506004546001600160a01b0316803b15610b3f5761071e6020916000966040519788809481936396f4e9f960e01b83528c600484016118d6565b03925af1938415610ae757600094610be9575b5061077161074d604051926040602085015260608401906118b1565b82610765601f199283838203016040840152866118b1565b039081018352826116bd565b6040519161077e83611687565b6001835260005b60208110610bd85750604051336020820152602081526107a481611687565b6107ad846119a2565b526107b7836119a2565b5060075491604051936107c985611650565b6001600160401b038460a01c168552600060208601526000604086015260006060860152306080860152600060a0860152600060c0860152600060e08601526101008501526101208401523360405190610822826116a2565b602a82526040366020840137815115610bc25760306020830153815160011015610bc2576078602183015360295b60018111610b635750610b4457602061089b91604051938161087b86935180928680870191016117f4565b820161088f825180938680850191016117f4565b010380845201826116bd565b6001600160a01b0382163b15610b3f576040519263b82916cb60e01b8452608060048501526001600160401b0381511660848501526001600160401b0360208201511660a48501526001600160401b0360408201511660c48501526001600160401b0360608201511660e485015260018060a01b036080820151166101048501526001600160401b0360a08201511661012485015260c08101516004811015610b295791849261014484959395015260e08401511515610164840152610100840151936101406101848501528451806101c48601526101e4906020828701928260051b8801019701916000905b828210610af3575050505060406109cc85936109ba6020986101206000960151608319888303016101a48901526118b1565b858103600319016024870152906118b1565b83810360031981016044860152838252601c8101606486015290870183905201926001600160a01b03165af18015610ae757610a7a575b50817fc15fb748c32ba4eb29c1c311e78533f93b4425eab49ea87c6fe4279ecadca04360a06001600160401b03602096600180841b036003541695600180851b0360065416600180861b0360055416906040519889528a8901526024356040890152606088015260808701521693a3604051908152f35b926020843d602011610adf575b81610a94602093836116bd565b8101031261011f577fc15fb748c32ba4eb29c1c311e78533f93b4425eab49ea87c6fe4279ecadca04360a06001600160401b038593610ad460209861177a565b509650505050610a03565b3d9150610a87565b6040513d6000823e3d90fd5b9193949650919496602080610b156001936101e3198d820301865289516118b1565b970192019201889694939192979597610988565b634e487b7160e01b600052602160045260246000fd5b6115fd565b60405163e22e27eb60e01b815233600482015260146024820152604490fd5b906010600f82161015610bc2578251821015610bc2576f181899199a1a9b1b9c1cb0b131b232b360811b600f82161a8383016020015360041c908015610bac5760001901610850565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b806060602080938701015201610785565b9093506020813d602011610c15575b81610c05602093836116bd565b8101031261011f57519285610731565b3d9150610bf8565b6020813d602011610c4e575b81610c36602093836116bd565b8101031261011f57610c479061178e565b50856106e4565b3d9150610c29565b6020813d602011610c87575b81610c6f602093836116bd565b8101031261011f57610c809061178e565b5085610689565b3d9150610c62565b84813b15610b3f576020602492604051938480926370a0823160e01b82523060048301525afa908115610ae757600091610ce2575b6044925060405191634787a10360e11b835260048301526024820152fd5b90506020823d602011610d0f575b81610cfd602093836116bd565b8101031261011f576044915190610cc4565b3d9150610cf0565b90506020813d602011610d41575b81610d32602093836116bd565b8101031261011f57518861063c565b3d9150610d25565b9094506020813d602011610d75575b81610d65602093836116bd565b8101031261011f57519387610609565b3d9150610d58565b634e487b7160e01b600052604160045260246000fd5b602090604051610da281611687565b60008152600083820152828286010152016104e4565b60405162461bcd60e51b815260206004820152602d60248201527f416d6f756e74206d7573742062652067726561746572207468616e206f72206560448201526c7175616c20746f20707269636560981b6064820152608490fd5b9092506020813d602011610e3f575b81610e2f602093836116bd565b8101031261011f57519187610482565b3d9150610e22565b6020813d602011610e78575b81610e60602093836116bd565b8101031261011f57610e719061178e565b5085610441565b3d9150610e53565b9091506020813d602011610eac575b81610e9c602093836116bd565b8101031261011f575190866103fe565b3d9150610e8f565b611581565b503d90816000823e610ecb82826116bd565b602081838101031261011f578051916001600160401b038311610eb45761014083830182840103126110fd5760405191610f0483611650565b610f0f84820161177a565b8352610f1f60208583010161177a565b6020840152610f3260408583010161177a565b6040840152610f4560608583010161177a565b6060840152808401608001516001600160a01b038116810361023e576080840152610f7460a08583010161177a565b60a084015260c08482010151600481101561023e5760c0840152610f9c60e08583010161178e565b60e084015261010084820101516001600160401b03811161106057828201601f828785010101121561109f57808583010151906001600160401b038211610d7d578160051b9060405192610ff360208401856116bd565b835260208301858501602084848b8901010101116110a4576020828987010101905b602084848b89010101018210611065575050505061010084015261012084820101516001600160401b0381116110605761012094611057938301920101611817565b82820152610331565b611729565b8151906001600160401b03821161109f576020809291611092898380958f8a908f85019401010101611817565b8152019201919050611015565b61179b565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b604051630a503cdb60e01b81526001600160401b0383166004820152602490fd5b3461012457600036600319011261011f576001546001600160a01b0380821633036111df57600054916bffffffffffffffffffffffff60a01b903382851617600055166001553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b3461012457600036600319011261011f576003546040516001600160a01b039091168152602090f35b3461012457602036600319011261011f5761125f6115e7565b6112676119af565b479081156112bd57600080808085855af16112806116f9565b501561128857005b604051639d11f56360e01b81523360048201526001600160a01b039190911660248201526044810191909152606490fd5b0390fd5b604051630686827b60e51b8152600490fd5b3461012457604036600319011261011f576112e86115e7565b6024356001600160a01b038116919082900361023e576113066119af565b813b15610b3f576040516370a0823160e01b81523060048201526020928382602481845afa918215610ae757600092611449575b5081156112bd5760405163a9059cbb60e01b8582019081526001600160a01b039490941660248201526044808201939093529182526113cc9260009081906113836064866116bd565b6040519461139086611687565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488870152519082855af16113c66116f9565b91611a01565b8051806113d557005b8183918101031261011f57816113eb910161178e565b156113f257005b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b9091508381813d8311611471575b61146181836116bd565b8101031261011f5751908461133a565b503d611457565b3461012457602036600319011261011f576001600160401b036114996115d1565b166000526002602052602060ff604060002054166040519015158152f35b346114e157600036600319011261011f5760206001600160401b0360075460a01c16604051908152f35b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b600435906001600160401b038216820361023e57565b600435906001600160a01b038216820361023e57565b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b61014081019081106001600160401b03821117610d7d57604052565b60a081019081106001600160401b03821117610d7d57604052565b604081019081106001600160401b03821117610d7d57604052565b606081019081106001600160401b03821117610d7d57604052565b90601f801991011681019081106001600160401b03821117610d7d57604052565b6001600160401b038111610d7d57601f01601f191660200190565b3d15611724573d9061170a826116de565b9161171860405193846116bd565b82523d6000602084013e565b606090565b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20696e76616c696420737472756374206f66666044820152621cd95d60ea1b6064820152608490fd5b51906001600160401b038216820361023e57565b5190811515820361023e57565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b60005b8381106118075750506000910152565b81810151838201526020016117f7565b81601f8201121561109f57805161182d816116de565b9261183b60405194856116bd565b8184526020828401011161185c5761185991602080850191016117f4565b90565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b906020916118ca815180928185528580860191016117f4565b601f01601f1916010190565b909291926001600160401b03604091168252602091604083820152611907855160a0604084015260e08301906118b1565b916119238487015193603f1994858583030160608601526118b1565b604087015194848483030160808501528080875193848152019601926000905b83821061197957505050505060c06080611859959660018060a01b0360608201511660a0850152015192828503019101526118b1565b845180516001600160a01b03168952830151888401529687019693820193600190910190611943565b805115610bc25760200190565b6000546001600160a01b031633036119c357565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b91929015611a635750815115611a15575090565b3b15611a1e5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611a765750805190602001fd5b60405162461bcd60e51b8152602060048201529081906112b99060248301906118b156fea26469706673582212208f6c323789d6e0126bc556efb44b71c631466044aa33579d5acb405e326e0c6964736f6c63430008180033";

type TokenTransferorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTransferorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTransferor__factory extends ContractFactory {
  constructor(...args: TokenTransferorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _router: AddressLike,
    _link: AddressLike,
    _spContractAddress: AddressLike,
    _schemaId: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _router,
      _link,
      _spContractAddress,
      _schemaId,
      _token,
      overrides || {}
    );
  }
  override deploy(
    _router: AddressLike,
    _link: AddressLike,
    _spContractAddress: AddressLike,
    _schemaId: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _router,
      _link,
      _spContractAddress,
      _schemaId,
      _token,
      overrides || {}
    ) as Promise<
      TokenTransferor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenTransferor__factory {
    return super.connect(runner) as TokenTransferor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTransferorInterface {
    return new Interface(_abi) as TokenTransferorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenTransferor {
    return new Contract(address, _abi, runner) as unknown as TokenTransferor;
  }
}
